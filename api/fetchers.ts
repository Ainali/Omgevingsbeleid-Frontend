/**
 * Generated by orval v6.5.1 üç∫
 * Do not edit manually.
 * Omgevingsbeleid API
 * This API serves all the object that make up the policies of a provincial government
 * OpenAPI spec version: 0.0.2
 */
import type {
    AmbitiesRead,
    GetAmbitiesParams,
    AmbitiesWrite,
    GetAmbitiesLineageidParams,
    BelangenRead,
    GetBelangenParams,
    BelangenWrite,
    GetBelangenLineageidParams,
    BeleidsdoelenRead,
    GetBeleidsdoelenParams,
    BeleidsdoelenWrite,
    GetBeleidsdoelenLineageidParams,
    BeleidskeuzesRead,
    GetBeleidskeuzesParams,
    BeleidskeuzesWrite,
    GetBeleidskeuzesLineageidParams,
    BeleidsmodulesRead,
    GetBeleidsmodulesParams,
    BeleidsmodulesWrite,
    GetBeleidsmodulesLineageidParams,
    BeleidsprestatiesRead,
    GetBeleidsprestatiesParams,
    BeleidsprestatiesWrite,
    GetBeleidsprestatiesLineageidParams,
    BeleidsregelsRead,
    GetBeleidsregelsParams,
    BeleidsregelsWrite,
    GetBeleidsregelsLineageidParams,
    BeleidsrelatiesRead,
    GetBeleidsrelatiesParams,
    GetBeleidsrelatiesLineageidParams,
    GetChangesAmbitiesOlduuidNewuuid200,
    GetChangesBelangenOlduuidNewuuid200,
    GetChangesBeleidsdoelenOlduuidNewuuid200,
    GetChangesBeleidskeuzesOlduuidNewuuid200,
    GetChangesBeleidsmodulesOlduuidNewuuid200,
    GetChangesBeleidsprestatiesOlduuidNewuuid200,
    GetChangesBeleidsregelsOlduuidNewuuid200,
    GetChangesBeleidsrelatiesOlduuidNewuuid200,
    GetChangesMaatregelenOlduuidNewuuid200,
    GetChangesThemasOlduuidNewuuid200,
    GetChangesVerordeningenOlduuidNewuuid200,
    GetChangesWerkingsgebiedenOlduuidNewuuid200,
    MaatregelenRead,
    GetMaatregelenParams,
    MaatregelenWrite,
    GetMaatregelenLineageidParams,
    GetSearch200,
    GetSearchParams,
    ThemasRead,
    GetThemasParams,
    ThemasWrite,
    GetThemasLineageidParams,
    GetValidAmbitiesParams,
    GetValidAmbitiesLineageidParams,
    GetValidBelangenParams,
    GetValidBelangenLineageidParams,
    GetValidBeleidsdoelenParams,
    GetValidBeleidsdoelenLineageidParams,
    GetValidBeleidskeuzesParams,
    GetValidBeleidskeuzesLineageidParams,
    GetValidBeleidsmodulesParams,
    GetValidBeleidsmodulesLineageidParams,
    GetValidBeleidsprestatiesParams,
    GetValidBeleidsprestatiesLineageidParams,
    GetValidBeleidsregelsParams,
    GetValidBeleidsregelsLineageidParams,
    GetValidBeleidsrelatiesParams,
    GetValidBeleidsrelatiesLineageidParams,
    GetValidMaatregelenParams,
    GetValidMaatregelenLineageidParams,
    GetValidThemasParams,
    GetValidThemasLineageidParams,
    VerordeningenRead,
    GetValidVerordeningenParams,
    GetValidVerordeningenLineageidParams,
    WerkingsgebiedenRead,
    GetValidWerkingsgebiedenParams,
    GetValidWerkingsgebiedenLineageidParams,
    GetVerordeningenParams,
    VerordeningenWrite,
    GetVerordeningenLineageidParams,
    GetWerkingsgebiedenParams,
    GetWerkingsgebiedenLineageidParams,
} from './fetchers.schemas'
import { customInstance } from './instance'

/**
 * @summary Gets all the ambities lineages and shows the latests object for each
 */
export const getAmbities = <TData = AmbitiesRead[]>(
    params?: GetAmbitiesParams
) => {
    return customInstance<TData>({ url: `/ambities`, method: 'get', params })
}

/**
 * @summary Creates a new ambities lineage
 */
export const postAmbities = <TData = AmbitiesRead>(
    ambitiesWrite: AmbitiesWrite
) => {
    return customInstance<TData>({
        url: `/ambities`,
        method: 'post',
        data: ambitiesWrite,
    })
}

/**
 * @summary Gets all the ambities lineages and shows the latests object for each
 */
export const getAmbitiesLineageid = <TData = AmbitiesRead[]>(
    lineageid: number,
    params?: GetAmbitiesLineageidParams
) => {
    return customInstance<TData>({
        url: `/ambities/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Adds a new ambities to a lineage
 */
export const patchAmbitiesLineageid = <TData = AmbitiesRead>(
    lineageid: number,
    ambitiesWrite: AmbitiesWrite
) => {
    return customInstance<TData>({
        url: `/ambities/${lineageid}`,
        method: 'patch',
        data: ambitiesWrite,
    })
}

/**
 * @summary Gets all the belangen lineages and shows the latests object for each
 */
export const getBelangen = <TData = BelangenRead[]>(
    params?: GetBelangenParams
) => {
    return customInstance<TData>({ url: `/belangen`, method: 'get', params })
}

/**
 * @summary Creates a new belangen lineage
 */
export const postBelangen = <TData = BelangenRead>(
    belangenWrite: BelangenWrite
) => {
    return customInstance<TData>({
        url: `/belangen`,
        method: 'post',
        data: belangenWrite,
    })
}

/**
 * @summary Gets all the belangen lineages and shows the latests object for each
 */
export const getBelangenLineageid = <TData = BelangenRead[]>(
    lineageid: number,
    params?: GetBelangenLineageidParams
) => {
    return customInstance<TData>({
        url: `/belangen/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Adds a new belangen to a lineage
 */
export const patchBelangenLineageid = <TData = BelangenRead>(
    lineageid: number,
    belangenWrite: BelangenWrite
) => {
    return customInstance<TData>({
        url: `/belangen/${lineageid}`,
        method: 'patch',
        data: belangenWrite,
    })
}

/**
 * @summary Gets all the beleidsdoelen lineages and shows the latests object for each
 */
export const getBeleidsdoelen = <TData = BeleidsdoelenRead[]>(
    params?: GetBeleidsdoelenParams
) => {
    return customInstance<TData>({
        url: `/beleidsdoelen`,
        method: 'get',
        params,
    })
}

/**
 * @summary Creates a new beleidsdoelen lineage
 */
export const postBeleidsdoelen = <TData = BeleidsdoelenRead>(
    beleidsdoelenWrite: BeleidsdoelenWrite
) => {
    return customInstance<TData>({
        url: `/beleidsdoelen`,
        method: 'post',
        data: beleidsdoelenWrite,
    })
}

/**
 * @summary Gets all the beleidsdoelen lineages and shows the latests object for each
 */
export const getBeleidsdoelenLineageid = <TData = BeleidsdoelenRead[]>(
    lineageid: number,
    params?: GetBeleidsdoelenLineageidParams
) => {
    return customInstance<TData>({
        url: `/beleidsdoelen/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Adds a new beleidsdoelen to a lineage
 */
export const patchBeleidsdoelenLineageid = <TData = BeleidsdoelenRead>(
    lineageid: number,
    beleidsdoelenWrite: BeleidsdoelenWrite
) => {
    return customInstance<TData>({
        url: `/beleidsdoelen/${lineageid}`,
        method: 'patch',
        data: beleidsdoelenWrite,
    })
}

/**
 * @summary Gets all the beleidskeuzes lineages and shows the latests object for each
 */
export const getBeleidskeuzes = <TData = BeleidskeuzesRead[]>(
    params?: GetBeleidskeuzesParams
) => {
    return customInstance<TData>({
        url: `/beleidskeuzes`,
        method: 'get',
        params,
    })
}

/**
 * @summary Creates a new beleidskeuzes lineage
 */
export const postBeleidskeuzes = <TData = BeleidskeuzesRead>(
    beleidskeuzesWrite: BeleidskeuzesWrite
) => {
    return customInstance<TData>({
        url: `/beleidskeuzes`,
        method: 'post',
        data: beleidskeuzesWrite,
    })
}

/**
 * @summary Gets all the beleidskeuzes lineages and shows the latests object for each
 */
export const getBeleidskeuzesLineageid = <TData = BeleidskeuzesRead[]>(
    lineageid: number,
    params?: GetBeleidskeuzesLineageidParams
) => {
    return customInstance<TData>({
        url: `/beleidskeuzes/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Adds a new beleidskeuzes to a lineage
 */
export const patchBeleidskeuzesLineageid = <TData = BeleidskeuzesRead>(
    lineageid: number,
    beleidskeuzesWrite: BeleidskeuzesWrite
) => {
    return customInstance<TData>({
        url: `/beleidskeuzes/${lineageid}`,
        method: 'patch',
        data: beleidskeuzesWrite,
    })
}

/**
 * @summary Gets all the beleidsmodules lineages and shows the latests object for each
 */
export const getBeleidsmodules = <TData = BeleidsmodulesRead[]>(
    params?: GetBeleidsmodulesParams
) => {
    return customInstance<TData>({
        url: `/beleidsmodules`,
        method: 'get',
        params,
    })
}

/**
 * @summary Creates a new beleidsmodules lineage
 */
export const postBeleidsmodules = <TData = BeleidsmodulesRead>(
    beleidsmodulesWrite: BeleidsmodulesWrite
) => {
    return customInstance<TData>({
        url: `/beleidsmodules`,
        method: 'post',
        data: beleidsmodulesWrite,
    })
}

/**
 * @summary Gets all the beleidsmodules lineages and shows the latests object for each
 */
export const getBeleidsmodulesLineageid = <TData = BeleidsmodulesRead[]>(
    lineageid: number,
    params?: GetBeleidsmodulesLineageidParams
) => {
    return customInstance<TData>({
        url: `/beleidsmodules/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Adds a new beleidsmodules to a lineage
 */
export const patchBeleidsmodulesLineageid = <TData = BeleidsmodulesRead>(
    lineageid: number,
    beleidsmodulesWrite: BeleidsmodulesWrite
) => {
    return customInstance<TData>({
        url: `/beleidsmodules/${lineageid}`,
        method: 'patch',
        data: beleidsmodulesWrite,
    })
}

/**
 * @summary Gets all the beleidsprestaties lineages and shows the latests object for each
 */
export const getBeleidsprestaties = <TData = BeleidsprestatiesRead[]>(
    params?: GetBeleidsprestatiesParams
) => {
    return customInstance<TData>({
        url: `/beleidsprestaties`,
        method: 'get',
        params,
    })
}

/**
 * @summary Creates a new beleidsprestaties lineage
 */
export const postBeleidsprestaties = <TData = BeleidsprestatiesRead>(
    beleidsprestatiesWrite: BeleidsprestatiesWrite
) => {
    return customInstance<TData>({
        url: `/beleidsprestaties`,
        method: 'post',
        data: beleidsprestatiesWrite,
    })
}

/**
 * @summary Gets all the beleidsprestaties lineages and shows the latests object for each
 */
export const getBeleidsprestatiesLineageid = <TData = BeleidsprestatiesRead[]>(
    lineageid: number,
    params?: GetBeleidsprestatiesLineageidParams
) => {
    return customInstance<TData>({
        url: `/beleidsprestaties/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Adds a new beleidsprestaties to a lineage
 */
export const patchBeleidsprestatiesLineageid = <TData = BeleidsprestatiesRead>(
    lineageid: number,
    beleidsprestatiesWrite: BeleidsprestatiesWrite
) => {
    return customInstance<TData>({
        url: `/beleidsprestaties/${lineageid}`,
        method: 'patch',
        data: beleidsprestatiesWrite,
    })
}

/**
 * @summary Gets all the beleidsregels lineages and shows the latests object for each
 */
export const getBeleidsregels = <TData = BeleidsregelsRead[]>(
    params?: GetBeleidsregelsParams
) => {
    return customInstance<TData>({
        url: `/beleidsregels`,
        method: 'get',
        params,
    })
}

/**
 * @summary Creates a new beleidsregels lineage
 */
export const postBeleidsregels = <TData = BeleidsregelsRead>(
    beleidsregelsWrite: BeleidsregelsWrite
) => {
    return customInstance<TData>({
        url: `/beleidsregels`,
        method: 'post',
        data: beleidsregelsWrite,
    })
}

/**
 * @summary Gets all the beleidsregels lineages and shows the latests object for each
 */
export const getBeleidsregelsLineageid = <TData = BeleidsregelsRead[]>(
    lineageid: number,
    params?: GetBeleidsregelsLineageidParams
) => {
    return customInstance<TData>({
        url: `/beleidsregels/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Adds a new beleidsregels to a lineage
 */
export const patchBeleidsregelsLineageid = <TData = BeleidsregelsRead>(
    lineageid: number,
    beleidsregelsWrite: BeleidsregelsWrite
) => {
    return customInstance<TData>({
        url: `/beleidsregels/${lineageid}`,
        method: 'patch',
        data: beleidsregelsWrite,
    })
}

/**
 * @summary Gets all the beleidsrelaties lineages and shows the latests object for each
 */
export const getBeleidsrelaties = <TData = BeleidsrelatiesRead[]>(
    params?: GetBeleidsrelatiesParams
) => {
    return customInstance<TData>({
        url: `/beleidsrelaties`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the beleidsrelaties lineages and shows the latests object for each
 */
export const getBeleidsrelatiesLineageid = <TData = BeleidsrelatiesRead[]>(
    lineageid: number,
    params?: GetBeleidsrelatiesLineageidParams
) => {
    return customInstance<TData>({
        url: `/beleidsrelaties/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Shows the changes between two versions of objects
 */
export const getChangesAmbitiesOlduuidNewuuid = <
    TData = GetChangesAmbitiesOlduuidNewuuid200
>(
    olduuid: string,
    newuuid: string
) => {
    return customInstance<TData>({
        url: `/changes/ambities/${olduuid}/${newuuid}`,
        method: 'get',
    })
}

/**
 * @summary Shows the changes between two versions of objects
 */
export const getChangesBelangenOlduuidNewuuid = <
    TData = GetChangesBelangenOlduuidNewuuid200
>(
    olduuid: string,
    newuuid: string
) => {
    return customInstance<TData>({
        url: `/changes/belangen/${olduuid}/${newuuid}`,
        method: 'get',
    })
}

/**
 * @summary Shows the changes between two versions of objects
 */
export const getChangesBeleidsdoelenOlduuidNewuuid = <
    TData = GetChangesBeleidsdoelenOlduuidNewuuid200
>(
    olduuid: string,
    newuuid: string
) => {
    return customInstance<TData>({
        url: `/changes/beleidsdoelen/${olduuid}/${newuuid}`,
        method: 'get',
    })
}

/**
 * @summary Shows the changes between two versions of objects
 */
export const getChangesBeleidskeuzesOlduuidNewuuid = <
    TData = GetChangesBeleidskeuzesOlduuidNewuuid200
>(
    olduuid: string,
    newuuid: string
) => {
    return customInstance<TData>({
        url: `/changes/beleidskeuzes/${olduuid}/${newuuid}`,
        method: 'get',
    })
}

/**
 * @summary Shows the changes between two versions of objects
 */
export const getChangesBeleidsmodulesOlduuidNewuuid = <
    TData = GetChangesBeleidsmodulesOlduuidNewuuid200
>(
    olduuid: string,
    newuuid: string
) => {
    return customInstance<TData>({
        url: `/changes/beleidsmodules/${olduuid}/${newuuid}`,
        method: 'get',
    })
}

/**
 * @summary Shows the changes between two versions of objects
 */
export const getChangesBeleidsprestatiesOlduuidNewuuid = <
    TData = GetChangesBeleidsprestatiesOlduuidNewuuid200
>(
    olduuid: string,
    newuuid: string
) => {
    return customInstance<TData>({
        url: `/changes/beleidsprestaties/${olduuid}/${newuuid}`,
        method: 'get',
    })
}

/**
 * @summary Shows the changes between two versions of objects
 */
export const getChangesBeleidsregelsOlduuidNewuuid = <
    TData = GetChangesBeleidsregelsOlduuidNewuuid200
>(
    olduuid: string,
    newuuid: string
) => {
    return customInstance<TData>({
        url: `/changes/beleidsregels/${olduuid}/${newuuid}`,
        method: 'get',
    })
}

/**
 * @summary Shows the changes between two versions of objects
 */
export const getChangesBeleidsrelatiesOlduuidNewuuid = <
    TData = GetChangesBeleidsrelatiesOlduuidNewuuid200
>(
    olduuid: string,
    newuuid: string
) => {
    return customInstance<TData>({
        url: `/changes/beleidsrelaties/${olduuid}/${newuuid}`,
        method: 'get',
    })
}

/**
 * @summary Shows the changes between two versions of objects
 */
export const getChangesMaatregelenOlduuidNewuuid = <
    TData = GetChangesMaatregelenOlduuidNewuuid200
>(
    olduuid: string,
    newuuid: string
) => {
    return customInstance<TData>({
        url: `/changes/maatregelen/${olduuid}/${newuuid}`,
        method: 'get',
    })
}

/**
 * @summary Shows the changes between two versions of objects
 */
export const getChangesThemasOlduuidNewuuid = <
    TData = GetChangesThemasOlduuidNewuuid200
>(
    olduuid: string,
    newuuid: string
) => {
    return customInstance<TData>({
        url: `/changes/themas/${olduuid}/${newuuid}`,
        method: 'get',
    })
}

/**
 * @summary Shows the changes between two versions of objects
 */
export const getChangesVerordeningenOlduuidNewuuid = <
    TData = GetChangesVerordeningenOlduuidNewuuid200
>(
    olduuid: string,
    newuuid: string
) => {
    return customInstance<TData>({
        url: `/changes/verordeningen/${olduuid}/${newuuid}`,
        method: 'get',
    })
}

/**
 * @summary Shows the changes between two versions of objects
 */
export const getChangesWerkingsgebiedenOlduuidNewuuid = <
    TData = GetChangesWerkingsgebiedenOlduuidNewuuid200
>(
    olduuid: string,
    newuuid: string
) => {
    return customInstance<TData>({
        url: `/changes/werkingsgebieden/${olduuid}/${newuuid}`,
        method: 'get',
    })
}

/**
 * @summary Gets all the maatregelen lineages and shows the latests object for each
 */
export const getMaatregelen = <TData = MaatregelenRead[]>(
    params?: GetMaatregelenParams
) => {
    return customInstance<TData>({ url: `/maatregelen`, method: 'get', params })
}

/**
 * @summary Creates a new maatregelen lineage
 */
export const postMaatregelen = <TData = MaatregelenRead>(
    maatregelenWrite: MaatregelenWrite
) => {
    return customInstance<TData>({
        url: `/maatregelen`,
        method: 'post',
        data: maatregelenWrite,
    })
}

/**
 * @summary Gets all the maatregelen lineages and shows the latests object for each
 */
export const getMaatregelenLineageid = <TData = MaatregelenRead[]>(
    lineageid: number,
    params?: GetMaatregelenLineageidParams
) => {
    return customInstance<TData>({
        url: `/maatregelen/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Adds a new maatregelen to a lineage
 */
export const patchMaatregelenLineageid = <TData = MaatregelenRead>(
    lineageid: number,
    maatregelenWrite: MaatregelenWrite
) => {
    return customInstance<TData>({
        url: `/maatregelen/${lineageid}`,
        method: 'patch',
        data: maatregelenWrite,
    })
}

/**
 * @summary Search for objects with a textual query
 */
export const getSearch = <TData = GetSearch200>(params?: GetSearchParams) => {
    return customInstance<TData>({ url: `/search`, method: 'get', params })
}

/**
 * @summary Gets all the themas lineages and shows the latests object for each
 */
export const getThemas = <TData = ThemasRead[]>(params?: GetThemasParams) => {
    return customInstance<TData>({ url: `/themas`, method: 'get', params })
}

/**
 * @summary Creates a new themas lineage
 */
export const postThemas = <TData = ThemasRead>(themasWrite: ThemasWrite) => {
    return customInstance<TData>({
        url: `/themas`,
        method: 'post',
        data: themasWrite,
    })
}

/**
 * @summary Gets all the themas lineages and shows the latests object for each
 */
export const getThemasLineageid = <TData = ThemasRead[]>(
    lineageid: number,
    params?: GetThemasLineageidParams
) => {
    return customInstance<TData>({
        url: `/themas/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Adds a new themas to a lineage
 */
export const patchThemasLineageid = <TData = ThemasRead>(
    lineageid: number,
    themasWrite: ThemasWrite
) => {
    return customInstance<TData>({
        url: `/themas/${lineageid}`,
        method: 'patch',
        data: themasWrite,
    })
}

/**
 * @summary Gets all the ambities lineages and shows the latests valid object for each
 */
export const getValidAmbities = <TData = AmbitiesRead[]>(
    params?: GetValidAmbitiesParams
) => {
    return customInstance<TData>({
        url: `/valid/ambities`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the ambities in this lineage that are valid
 */
export const getValidAmbitiesLineageid = <TData = AmbitiesRead[]>(
    lineageid: number,
    params?: GetValidAmbitiesLineageidParams
) => {
    return customInstance<TData>({
        url: `/valid/ambities/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the belangen lineages and shows the latests valid object for each
 */
export const getValidBelangen = <TData = BelangenRead[]>(
    params?: GetValidBelangenParams
) => {
    return customInstance<TData>({
        url: `/valid/belangen`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the belangen in this lineage that are valid
 */
export const getValidBelangenLineageid = <TData = BelangenRead[]>(
    lineageid: number,
    params?: GetValidBelangenLineageidParams
) => {
    return customInstance<TData>({
        url: `/valid/belangen/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the beleidsdoelen lineages and shows the latests valid object for each
 */
export const getValidBeleidsdoelen = <TData = BeleidsdoelenRead[]>(
    params?: GetValidBeleidsdoelenParams
) => {
    return customInstance<TData>({
        url: `/valid/beleidsdoelen`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the beleidsdoelen in this lineage that are valid
 */
export const getValidBeleidsdoelenLineageid = <TData = BeleidsdoelenRead[]>(
    lineageid: number,
    params?: GetValidBeleidsdoelenLineageidParams
) => {
    return customInstance<TData>({
        url: `/valid/beleidsdoelen/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the beleidskeuzes lineages and shows the latests valid object for each
 */
export const getValidBeleidskeuzes = <TData = BeleidskeuzesRead[]>(
    params?: GetValidBeleidskeuzesParams
) => {
    return customInstance<TData>({
        url: `/valid/beleidskeuzes`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the beleidskeuzes in this lineage that are valid
 */
export const getValidBeleidskeuzesLineageid = <TData = BeleidskeuzesRead[]>(
    lineageid: number,
    params?: GetValidBeleidskeuzesLineageidParams
) => {
    return customInstance<TData>({
        url: `/valid/beleidskeuzes/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the beleidsmodules lineages and shows the latests valid object for each
 */
export const getValidBeleidsmodules = <TData = BeleidsmodulesRead[]>(
    params?: GetValidBeleidsmodulesParams
) => {
    return customInstance<TData>({
        url: `/valid/beleidsmodules`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the beleidsmodules in this lineage that are valid
 */
export const getValidBeleidsmodulesLineageid = <TData = BeleidsmodulesRead[]>(
    lineageid: number,
    params?: GetValidBeleidsmodulesLineageidParams
) => {
    return customInstance<TData>({
        url: `/valid/beleidsmodules/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the beleidsprestaties lineages and shows the latests valid object for each
 */
export const getValidBeleidsprestaties = <TData = BeleidsprestatiesRead[]>(
    params?: GetValidBeleidsprestatiesParams
) => {
    return customInstance<TData>({
        url: `/valid/beleidsprestaties`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the beleidsprestaties in this lineage that are valid
 */
export const getValidBeleidsprestatiesLineageid = <
    TData = BeleidsprestatiesRead[]
>(
    lineageid: number,
    params?: GetValidBeleidsprestatiesLineageidParams
) => {
    return customInstance<TData>({
        url: `/valid/beleidsprestaties/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the beleidsregels lineages and shows the latests valid object for each
 */
export const getValidBeleidsregels = <TData = BeleidsregelsRead[]>(
    params?: GetValidBeleidsregelsParams
) => {
    return customInstance<TData>({
        url: `/valid/beleidsregels`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the beleidsregels in this lineage that are valid
 */
export const getValidBeleidsregelsLineageid = <TData = BeleidsregelsRead[]>(
    lineageid: number,
    params?: GetValidBeleidsregelsLineageidParams
) => {
    return customInstance<TData>({
        url: `/valid/beleidsregels/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the beleidsrelaties lineages and shows the latests valid object for each
 */
export const getValidBeleidsrelaties = <TData = BeleidsrelatiesRead[]>(
    params?: GetValidBeleidsrelatiesParams
) => {
    return customInstance<TData>({
        url: `/valid/beleidsrelaties`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the beleidsrelaties in this lineage that are valid
 */
export const getValidBeleidsrelatiesLineageid = <TData = BeleidsrelatiesRead[]>(
    lineageid: number,
    params?: GetValidBeleidsrelatiesLineageidParams
) => {
    return customInstance<TData>({
        url: `/valid/beleidsrelaties/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the maatregelen lineages and shows the latests valid object for each
 */
export const getValidMaatregelen = <TData = MaatregelenRead[]>(
    params?: GetValidMaatregelenParams
) => {
    return customInstance<TData>({
        url: `/valid/maatregelen`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the maatregelen in this lineage that are valid
 */
export const getValidMaatregelenLineageid = <TData = MaatregelenRead[]>(
    lineageid: number,
    params?: GetValidMaatregelenLineageidParams
) => {
    return customInstance<TData>({
        url: `/valid/maatregelen/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the themas lineages and shows the latests valid object for each
 */
export const getValidThemas = <TData = ThemasRead[]>(
    params?: GetValidThemasParams
) => {
    return customInstance<TData>({
        url: `/valid/themas`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the themas in this lineage that are valid
 */
export const getValidThemasLineageid = <TData = ThemasRead[]>(
    lineageid: number,
    params?: GetValidThemasLineageidParams
) => {
    return customInstance<TData>({
        url: `/valid/themas/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the verordeningen lineages and shows the latests valid object for each
 */
export const getValidVerordeningen = <TData = VerordeningenRead[]>(
    params?: GetValidVerordeningenParams
) => {
    return customInstance<TData>({
        url: `/valid/verordeningen`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the verordeningen in this lineage that are valid
 */
export const getValidVerordeningenLineageid = <TData = VerordeningenRead[]>(
    lineageid: number,
    params?: GetValidVerordeningenLineageidParams
) => {
    return customInstance<TData>({
        url: `/valid/verordeningen/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the werkingsgebieden lineages and shows the latests valid object for each
 */
export const getValidWerkingsgebieden = <TData = WerkingsgebiedenRead[]>(
    params?: GetValidWerkingsgebiedenParams
) => {
    return customInstance<TData>({
        url: `/valid/werkingsgebieden`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the werkingsgebieden in this lineage that are valid
 */
export const getValidWerkingsgebiedenLineageid = <
    TData = WerkingsgebiedenRead[]
>(
    lineageid: number,
    params?: GetValidWerkingsgebiedenLineageidParams
) => {
    return customInstance<TData>({
        url: `/valid/werkingsgebieden/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the verordeningen lineages and shows the latests object for each
 */
export const getVerordeningen = <TData = VerordeningenRead[]>(
    params?: GetVerordeningenParams
) => {
    return customInstance<TData>({
        url: `/verordeningen`,
        method: 'get',
        params,
    })
}

/**
 * @summary Creates a new verordeningen lineage
 */
export const postVerordeningen = <TData = VerordeningenRead>(
    verordeningenWrite: VerordeningenWrite
) => {
    return customInstance<TData>({
        url: `/verordeningen`,
        method: 'post',
        data: verordeningenWrite,
    })
}

/**
 * @summary Gets all the verordeningen lineages and shows the latests object for each
 */
export const getVerordeningenLineageid = <TData = VerordeningenRead[]>(
    lineageid: number,
    params?: GetVerordeningenLineageidParams
) => {
    return customInstance<TData>({
        url: `/verordeningen/${lineageid}`,
        method: 'get',
        params,
    })
}

/**
 * @summary Adds a new verordeningen to a lineage
 */
export const patchVerordeningenLineageid = <TData = VerordeningenRead>(
    lineageid: number,
    verordeningenWrite: VerordeningenWrite
) => {
    return customInstance<TData>({
        url: `/verordeningen/${lineageid}`,
        method: 'patch',
        data: verordeningenWrite,
    })
}

/**
 * @summary Gets all the ambities lineages and shows the latests object for each
 */
export const getVersionAmbitiesObjectuuid = <TData = AmbitiesRead>(
    objectuuid: string
) => {
    return customInstance<TData>({
        url: `/version/ambities/${objectuuid}`,
        method: 'get',
    })
}

/**
 * @summary Gets all the belangen lineages and shows the latests object for each
 */
export const getVersionBelangenObjectuuid = <TData = BelangenRead>(
    objectuuid: string
) => {
    return customInstance<TData>({
        url: `/version/belangen/${objectuuid}`,
        method: 'get',
    })
}

/**
 * @summary Gets all the beleidsdoelen lineages and shows the latests object for each
 */
export const getVersionBeleidsdoelenObjectuuid = <TData = BeleidsdoelenRead>(
    objectuuid: string
) => {
    return customInstance<TData>({
        url: `/version/beleidsdoelen/${objectuuid}`,
        method: 'get',
    })
}

/**
 * @summary Gets all the beleidskeuzes lineages and shows the latests object for each
 */
export const getVersionBeleidskeuzesObjectuuid = <TData = BeleidskeuzesRead>(
    objectuuid: string
) => {
    return customInstance<TData>({
        url: `/version/beleidskeuzes/${objectuuid}`,
        method: 'get',
    })
}

/**
 * @summary Gets all the beleidsmodules lineages and shows the latests object for each
 */
export const getVersionBeleidsmodulesObjectuuid = <TData = BeleidsmodulesRead>(
    objectuuid: string
) => {
    return customInstance<TData>({
        url: `/version/beleidsmodules/${objectuuid}`,
        method: 'get',
    })
}

/**
 * @summary Gets all the beleidsprestaties lineages and shows the latests object for each
 */
export const getVersionBeleidsprestatiesObjectuuid = <
    TData = BeleidsprestatiesRead
>(
    objectuuid: string
) => {
    return customInstance<TData>({
        url: `/version/beleidsprestaties/${objectuuid}`,
        method: 'get',
    })
}

/**
 * @summary Gets all the beleidsregels lineages and shows the latests object for each
 */
export const getVersionBeleidsregelsObjectuuid = <TData = BeleidsregelsRead>(
    objectuuid: string
) => {
    return customInstance<TData>({
        url: `/version/beleidsregels/${objectuuid}`,
        method: 'get',
    })
}

/**
 * @summary Gets all the beleidsrelaties lineages and shows the latests object for each
 */
export const getVersionBeleidsrelatiesObjectuuid = <
    TData = BeleidsrelatiesRead
>(
    objectuuid: string
) => {
    return customInstance<TData>({
        url: `/version/beleidsrelaties/${objectuuid}`,
        method: 'get',
    })
}

/**
 * @summary Gets all the maatregelen lineages and shows the latests object for each
 */
export const getVersionMaatregelenObjectuuid = <TData = MaatregelenRead>(
    objectuuid: string
) => {
    return customInstance<TData>({
        url: `/version/maatregelen/${objectuuid}`,
        method: 'get',
    })
}

/**
 * @summary Gets all the themas lineages and shows the latests object for each
 */
export const getVersionThemasObjectuuid = <TData = ThemasRead>(
    objectuuid: string
) => {
    return customInstance<TData>({
        url: `/version/themas/${objectuuid}`,
        method: 'get',
    })
}

/**
 * @summary Gets all the verordeningen lineages and shows the latests object for each
 */
export const getVersionVerordeningenObjectuuid = <TData = VerordeningenRead>(
    objectuuid: string
) => {
    return customInstance<TData>({
        url: `/version/verordeningen/${objectuuid}`,
        method: 'get',
    })
}

/**
 * @summary Gets all the werkingsgebieden lineages and shows the latests object for each
 */
export const getVersionWerkingsgebiedenObjectuuid = <
    TData = WerkingsgebiedenRead
>(
    objectuuid: string
) => {
    return customInstance<TData>({
        url: `/version/werkingsgebieden/${objectuuid}`,
        method: 'get',
    })
}

/**
 * @summary Gets all the werkingsgebieden lineages and shows the latests object for each
 */
export const getWerkingsgebieden = <TData = WerkingsgebiedenRead[]>(
    params?: GetWerkingsgebiedenParams
) => {
    return customInstance<TData>({
        url: `/werkingsgebieden`,
        method: 'get',
        params,
    })
}

/**
 * @summary Gets all the werkingsgebieden lineages and shows the latests object for each
 */
export const getWerkingsgebiedenLineageid = <TData = WerkingsgebiedenRead[]>(
    lineageid: number,
    params?: GetWerkingsgebiedenLineageidParams
) => {
    return customInstance<TData>({
        url: `/werkingsgebieden/${lineageid}`,
        method: 'get',
        params,
    })
}
